package star;

import java.util.LinkedList;
import java.util.Queue;

public class BFS {
	
		static int[][] maze = {
            {  0,  0,  0,  0,  0,  0,  0,  0},
            {  0,  0,  0,  0,  0,  0,  0,  0},
            {  0,  0,  0,100,100,100,  0,  0},
            {  0,  0,  0,  0,  0,100,  1,  0},
            {  0,  0,100,  0,  0,100,  0,  0},
            {  0,  0,100,  0,  0,100,  0,  0},
            {  0,  0,100,100,100,  0,  0,  0},
            {  0,  0,  0,  0,  0,  0,  0,  0},
        };
	 static Queue<Integer> rq = new LinkedList<>();
	 static Queue<Integer> cq = new LinkedList<>();
	 static boolean visited[][];
	 static int r,c;
	boolean reached_end;
	public static void main(String[] args) {
		int sr=0;
		int sc=0;
		rq.add(sr);
		cq.add(sc);
		visited[sr][sc] = true;
		while (rq.size()>0){
			r = rq.remove();
			c = cq.remove();
			 if(maze[r][c]==1){
				 
			 }
		}
		
	}

}
